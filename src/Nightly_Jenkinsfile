TARGET_FOLDER=/usr/share/apache
PROJECT_NAME=$(echo $GIT_URL | cut -d"/" -f4)

# Step 0: Include some traces and clean-up actions before starting

sudo rm -rf ./target/*.flv
sudo rm -rf ./target/*.jar*


# Step 1a: Compilation and UT

docker run --rm --volumes-from codeurjc-forge-jenkins -w ${WORKSPACE} maven mvn -Dtest=BoardTestParam*Test.java install compile package
docker run --rm --volumes-from codeurjc-forge-jenkins -w ${WORKSPACE} maven mvn -Dtest=TicTacToeGameTest.java test

mkdir -p $TARGET_FOLDER/$PROJECT_NAME
cp ./target/*.jar $TARGET_FOLDER/$PROJECT_NAME


# Step 1b: System test with TestContainers

docker run --name STDocker --rm --volumes-from codeurjc-forge-jenkins -v /var/run/docker.sock:/var/run/docker.sock -w ${WORKSPACE} maven mvn  -Dtest=WebAppContainerTest.java test


# Step 1c: Include some traces and clean-up actions before continuing

sudo rm -rf ./target/*.flv


# Step 2: Docker image creation

./build-image-nightly.sh


# Step 3: Docker image publishing with X.Y.Z.nightly.YYYYMMDD format

IM_NAME=$(cat ./container-name.txt)

cat ./dockerhub-password.txt | docker login --username emartej --password-stdin
docker tag emartej/tictactoe:latest emartej/tictactoe:$IM_NAME
docker push emartej/tictactoe:$IM_NAME


# Step 4: System test with TestContainers against application image

docker run --name WebAppDocker emartej/tictactoe:$IM_NAME &

sleep 30

./get-container-ip.sh

docker run --name STImageDocker --rm --volumes-from codeurjc-forge-jenkins -v /var/run/docker.sock:/var/run/docker.sock -w ${WORKSPACE} maven mvn  -Dtest=WebAppContainerDockerImageTest.java test

docker stop WebAppDocker
docker rm WebAppDocker

sleep 10


# Step 5: Docker publishing

cat ./dockerhub-password.txt | docker login --username emartej --password-stdin
docker tag emartej/tictactoe:latest emartej/tictactoe:nightly
docker push emartej/tictactoe:nightly
